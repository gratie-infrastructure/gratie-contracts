{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "iconURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_iconURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimLimit",
          "type": "uint256"
        }
      ],
      "name": "updateClaimLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "238:1360:72:-:0;;;505:55;;;;;;;;;-1:-1:-1;530:22:72;:20;:22::i;:::-;238:1360;;5939:280:29;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:29;;216:2:79;5998:66:29;;;198:21:79;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:79;;;338:37;392:19;;5998:66:29;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:29;6140:15;6125:30;;;;;;6174:28;;564:36:79;;;6174:28:29;;552:2:79;537:18;6174:28:29;;;;;;;6074:139;5939:280::o;422:184:79:-;238:1360:72;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a457c2d71161007c578063a457c2d714610295578063a9059cbb146102a8578063be610676146102bb578063c6788bdd146102c4578063dd62ed3e146102e4578063f2fde38b146102f757600080fd5b806370a0823114610225578063715018a61461024e57806380ddd09f14610256578063830953ab146102695780638da5cb5b1461027257806395d89b411461028d57600080fd5b806323b872dd1161011557806323b872dd146101c2578063313ce567146101d557806339509351146101e457806340c10f19146101f757806342966c681461020a5780634e71d92d1461021d57600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd146101935780631f910971146101a557806322370ae7146101ad575b600080fd5b61015a61030a565b6040516101679190610f42565b60405180910390f35b61018361017e366004610fb3565b61039c565b6040519015158152602001610167565b6035545b604051908152602001610167565b61015a6103b4565b6101c06101bb366004610fdd565b610442565b005b6101836101d0366004610ff6565b61044f565b60405160128152602001610167565b6101836101f2366004610fb3565b610473565b6101c0610205366004610fb3565b610495565b6101c0610218366004610fdd565b6104ab565b6101c06104b8565b610197610233366004611032565b6001600160a01b031660009081526033602052604090205490565b6101c0610544565b6101c06102643660046110f7565b610558565b61019760985481565b6065546040516001600160a01b039091168152602001610167565b61015a6106ae565b6101836102a3366004610fb3565b6106bd565b6101836102b6366004610fb3565b610738565b61019760995481565b6101976102d2366004611032565b609a6020526000908152604090205481565b6101976102f2366004611191565b610746565b6101c0610305366004611032565b610771565b606060368054610319906111c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610345906111c4565b80156103925780601f1061036757610100808354040283529160200191610392565b820191906000526020600020905b81548152906001019060200180831161037557829003601f168201915b5050505050905090565b6000336103aa8185856107e7565b5060019392505050565b609780546103c1906111c4565b80601f01602080910402602001604051908101604052809291908181526020018280546103ed906111c4565b801561043a5780601f1061040f5761010080835404028352916020019161043a565b820191906000526020600020905b81548152906001019060200180831161041d57829003601f168201915b505050505081565b61044a61090c565b609955565b60003361045d858285610966565b6104688585856109e0565b506001949350505050565b6000336103aa8185856104868383610746565b6104909190611215565b6107e7565b61049d61090c565b6104a78282610b8b565b5050565b6104b53382610c4c565b50565b609954336000908152609a602052604090205411156105155760405162461bcd60e51b8152602060048201526014602482015273436c61696d204c696d697420726561636865642160601b60448201526064015b60405180910390fd5b336000908152609a6020526040812080549091906105329061122d565b909155506098546104b5903390610738565b61054c61090c565b6105566000610d7d565b565b600054610100900460ff16158080156105785750600054600160ff909116105b806105925750303b158015610592575060005460ff166001145b6105f55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050c565b6000805460ff191660011790558015610618576000805461ff0019166101001790555b835161062b906097906020870190610ea9565b50610634610dcf565b61063e8686610dfe565b6106513361064c8486611248565b610b8b565b61065b3083610b8b565b609882905580156106a6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b606060378054610319906111c4565b600033816106cb8286610746565b90508381101561072b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161050c565b61046882868684036107e7565b6000336103aa8185856109e0565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61077961090c565b6001600160a01b0381166107de5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050c565b6104b581610d7d565b6001600160a01b0383166108495760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161050c565b6001600160a01b0382166108aa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161050c565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6065546001600160a01b031633146105565760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050c565b60006109728484610746565b905060001981146109da57818110156109cd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161050c565b6109da84848484036107e7565b50505050565b6001600160a01b038316610a445760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161050c565b6001600160a01b038216610aa65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050c565b6001600160a01b03831660009081526033602052604090205481811015610b1e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161050c565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b7e9086815260200190565b60405180910390a36109da565b6001600160a01b038216610be15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161050c565b8060356000828254610bf39190611215565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610cac5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161050c565b6001600160a01b03821660009081526033602052604090205481811015610d205760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161050c565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016108ff565b505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610df65760405162461bcd60e51b815260040161050c9061125f565b610556610e2f565b600054610100900460ff16610e255760405162461bcd60e51b815260040161050c9061125f565b6104a78282610e5f565b600054610100900460ff16610e565760405162461bcd60e51b815260040161050c9061125f565b61055633610d7d565b600054610100900460ff16610e865760405162461bcd60e51b815260040161050c9061125f565b8151610e99906036906020850190610ea9565b508051610d789060379060208401905b828054610eb5906111c4565b90600052602060002090601f016020900481019282610ed75760008555610f1d565b82601f10610ef057805160ff1916838001178555610f1d565b82800160010185558215610f1d579182015b82811115610f1d578251825591602001919060010190610f02565b50610f29929150610f2d565b5090565b5b80821115610f295760008155600101610f2e565b600060208083528351808285015260005b81811015610f6f57858101830151858201604001528201610f53565b81811115610f81576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610fae57600080fd5b919050565b60008060408385031215610fc657600080fd5b610fcf83610f97565b946020939093013593505050565b600060208284031215610fef57600080fd5b5035919050565b60008060006060848603121561100b57600080fd5b61101484610f97565b925061102260208501610f97565b9150604084013590509250925092565b60006020828403121561104457600080fd5b61104d82610f97565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261107b57600080fd5b813567ffffffffffffffff8082111561109657611096611054565b604051601f8301601f19908116603f011681019082821181831017156110be576110be611054565b816040528381528660208588010111156110d757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561110f57600080fd5b853567ffffffffffffffff8082111561112757600080fd5b61113389838a0161106a565b9650602088013591508082111561114957600080fd5b61115589838a0161106a565b9550604088013591508082111561116b57600080fd5b506111788882890161106a565b9598949750949560608101359550608001359392505050565b600080604083850312156111a457600080fd5b6111ad83610f97565b91506111bb60208401610f97565b90509250929050565b600181811c908216806111d857607f821691505b602082108114156111f957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611228576112286111ff565b500190565b6000600019821415611241576112416111ff565b5060010190565b60008282101561125a5761125a6111ff565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212204f932b83f20e10fa022030e9e350b3716ab741656d0c8ae532016ab3c123986664736f6c63430008090033",
    "sourceMap": "238:1360:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4781:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:79;;1211:22;1193:41;;1181:2;1166:18;4781:197:36;1053:187:79;3592:106:36;3679:12;;3592:106;;;1391:25:79;;;1379:2;1364:18;3592:106:36;1245:177:79;308:21:72;;;:::i;1486:109::-;;;;;;:::i;:::-;;:::i;:::-;;5540:256:36;;;;;;:::i;:::-;;:::i;3441:91::-;;;3523:2;2087:36:79;;2075:2;2060:18;3441:91:36;1945:184:79;6191:234:36;;;;;;:::i;:::-;;:::i;1017:138:72:-;;;;;;:::i;:::-;;:::i;1163:85::-;;;;;;:::i;:::-;;:::i;1256:222::-;;;:::i;3756:125:36:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3856:18:36;3830:7;3856:18;;;:9;:18;;;;;;;3756:125;2064:101:21;;;:::i;572:437:72:-;;;;;;:::i;:::-;;:::i;336:26::-;;;;;;1441:85:21;1513:6;;1441:85;;-1:-1:-1;;;;;1513:6:21;;;4213:51:79;;4201:2;4186:18;1441:85:21;4067:203:79;2706:102:36;;;:::i;6912:427::-;;;;;;:::i;:::-;;:::i;4077:189::-;;;;;;:::i;:::-;;:::i;369:25:72:-;;;;;;401:41;;;;;;:::i;:::-;;;;;;;;;;;;;;4324:149:36;;;;;;:::i;:::-;;:::i;2314:198:21:-;;;;;;:::i;:::-;;:::i;2495:98:36:-;2549:13;2581:5;2574:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98;:::o;4781:197::-;4864:4;929:10:45;4918:32:36;929:10:45;4934:7:36;4943:6;4918:8;:32::i;:::-;-1:-1:-1;4967:4:36;;4781:197;-1:-1:-1;;;4781:197:36:o;308:21:72:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1486:109::-;1334:13:21;:11;:13::i;:::-;1563:10:72::1;:24:::0;1486:109::o;5540:256:36:-;5637:4;929:10:45;5693:38:36;5709:4;929:10:45;5724:6:36;5693:15;:38::i;:::-;5741:27;5751:4;5757:2;5761:6;5741:9;:27::i;:::-;-1:-1:-1;5785:4:36;;5540:256;-1:-1:-1;;;;5540:256:36:o;6191:234::-;6279:4;929:10:45;6333:64:36;929:10:45;6349:7:36;6386:10;6358:25;929:10:45;6349:7:36;6358:9;:25::i;:::-;:38;;;;:::i;:::-;6333:8;:64::i;1017:138:72:-;1334:13:21;:11;:13::i;:::-;1122:25:72::1;1128:9;1139:7;1122:5;:25::i;:::-;1017:138:::0;;:::o;1163:85::-;1214:26;1220:10;1232:7;1214:5;:26::i;:::-;1163:85;:::o;1256:222::-;1337:10;;1322;1315:18;;;;:6;:18;;;;;;:32;;1293:102;;;;-1:-1:-1;;;1293:102:72;;5392:2:79;1293:102:72;;;5374:21:79;5431:2;5411:18;;;5404:30;-1:-1:-1;;;5450:18:79;;;5443:50;5510:18;;1293:102:72;;;;;;;;;1415:10;1408:18;;;;:6;:18;;;;;1406:20;;1408:18;;;1406:20;;;:::i;:::-;;;;-1:-1:-1;1458:11:72;;1437:33;;1446:10;;1437:8;:33::i;2064:101:21:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;572:437:72:-;3279:19:29;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:29;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:29;1713:19:44;:23;;;3387:66:29;;-1:-1:-1;3436:12:29;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:29;;5881:2:79;3325:201:29;;;5863:21:79;5920:2;5900:18;;;5893:30;5959:34;5939:18;;;5932:62;-1:-1:-1;;;6010:18:79;;;6003:44;6064:19;;3325:201:29;5679:410:79;3325:201:29;3536:12;:16;;-1:-1:-1;;3536:16:29;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:29;;;;;3562:65;783:18:72;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;;812:16;:14;:16::i;:::-;839:28;852:5;859:7;839:12;:28::i;:::-;878:41;884:10;896:22;906:12:::0;896:7;:22:::1;:::i;:::-;878:5;:41::i;:::-;930:34;944:4;951:12;930:5;:34::i;:::-;975:11;:26:::0;;;3647:99:29;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:29;;;3721:14;;-1:-1:-1;2087:36:79;;3721:14:29;;2075:2:79;2060:18;3721:14:29;;;;;;;3647:99;3269:483;572:437:72;;;;;:::o;2706:102:36:-;2762:13;2794:7;2787:14;;;;;:::i;6912:427::-;7005:4;929:10:45;7005:4:36;7086:25;929:10:45;7103:7:36;7086:9;:25::i;:::-;7059:52;;7149:15;7129:16;:35;;7121:85;;;;-1:-1:-1;;;7121:85:36;;6625:2:79;7121:85:36;;;6607:21:79;6664:2;6644:18;;;6637:30;6703:34;6683:18;;;6676:62;-1:-1:-1;;;6754:18:79;;;6747:35;6799:19;;7121:85:36;6423:401:79;7121:85:36;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;4077:189::-;4156:4;929:10:45;4210:28:36;929:10:45;4227:2:36;4231:6;4210:9;:28::i;4324:149::-;-1:-1:-1;;;;;4439:18:36;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149::o;2314:198:21:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:21;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:21;;7031:2:79;2394:73:21::1;::::0;::::1;7013:21:79::0;7070:2;7050:18;;;7043:30;7109:34;7089:18;;;7082:62;-1:-1:-1;;;7160:18:79;;;7153:36;7206:19;;2394:73:21::1;6829:402:79::0;2394:73:21::1;2477:28;2496:8;2477:18;:28::i;10794:340:36:-:0;-1:-1:-1;;;;;10895:19:36;;10887:68;;;;-1:-1:-1;;;10887:68:36;;7438:2:79;10887:68:36;;;7420:21:79;7477:2;7457:18;;;7450:30;7516:34;7496:18;;;7489:62;-1:-1:-1;;;7567:18:79;;;7560:34;7611:19;;10887:68:36;7236:400:79;10887:68:36;-1:-1:-1;;;;;10973:21:36;;10965:68;;;;-1:-1:-1;;;10965:68:36;;7843:2:79;10965:68:36;;;7825:21:79;7882:2;7862:18;;;7855:30;7921:34;7901:18;;;7894:62;-1:-1:-1;;;7972:18:79;;;7965:32;8014:19;;10965:68:36;7641:398:79;10965:68:36;-1:-1:-1;;;;;11044:18:36;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11095:32;;1391:25:79;;;11095:32:36;;1364:18:79;11095:32:36;;;;;;;;10794:340;;;:::o;1599:130:21:-;1513:6;;-1:-1:-1;;;;;1513:6:21;929:10:45;1662:23:21;1654:68;;;;-1:-1:-1;;;1654:68:21;;8246:2:79;1654:68:21;;;8228:21:79;;;8265:18;;;8258:30;8324:34;8304:18;;;8297:62;8376:18;;1654:68:21;8044:356:79;11415:411:36;11515:24;11542:25;11552:5;11559:7;11542:9;:25::i;:::-;11515:52;;-1:-1:-1;;11581:16:36;:37;11577:243;;11662:6;11642:16;:26;;11634:68;;;;-1:-1:-1;;;11634:68:36;;8607:2:79;11634:68:36;;;8589:21:79;8646:2;8626:18;;;8619:30;8685:31;8665:18;;;8658:59;8734:18;;11634:68:36;8405:353:79;11634:68:36;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11505:321;11415:411;;;:::o;7793:788::-;-1:-1:-1;;;;;7889:18:36;;7881:68;;;;-1:-1:-1;;;7881:68:36;;8965:2:79;7881:68:36;;;8947:21:79;9004:2;8984:18;;;8977:30;9043:34;9023:18;;;9016:62;-1:-1:-1;;;9094:18:79;;;9087:35;9139:19;;7881:68:36;8763:401:79;7881:68:36;-1:-1:-1;;;;;7967:16:36;;7959:64;;;;-1:-1:-1;;;7959:64:36;;9371:2:79;7959:64:36;;;9353:21:79;9410:2;9390:18;;;9383:30;9449:34;9429:18;;;9422:62;-1:-1:-1;;;9500:18:79;;;9493:33;9543:19;;7959:64:36;9169:399:79;7959:64:36;-1:-1:-1;;;;;8105:15:36;;8083:19;8105:15;;;:9;:15;;;;;;8138:21;;;;8130:72;;;;-1:-1:-1;;;8130:72:36;;9775:2:79;8130:72:36;;;9757:21:79;9814:2;9794:18;;;9787:30;9853:34;9833:18;;;9826:62;-1:-1:-1;;;9904:18:79;;;9897:36;9950:19;;8130:72:36;9573:402:79;8130:72:36;-1:-1:-1;;;;;8236:15:36;;;;;;;:9;:15;;;;;;8254:20;;;8236:38;;8451:13;;;;;;;;;;:23;;;;;;8500:26;;;;;;8268:6;1391:25:79;;1379:2;1364:18;;1245:177;8500:26:36;;;;;;;;8537:37;9712:659;8857:535;-1:-1:-1;;;;;8940:21:36;;8932:65;;;;-1:-1:-1;;;8932:65:36;;10182:2:79;8932:65:36;;;10164:21:79;10221:2;10201:18;;;10194:30;10260:33;10240:18;;;10233:61;10311:18;;8932:65:36;9980:355:79;8932:65:36;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9236:18:36;;;;;;:9;:18;;;;;;;;:28;;;;;;9289:37;1391:25:79;;;9289:37:36;;1364:18:79;9289:37:36;;;;;;;1017:138:72;;:::o;9712:659:36:-;-1:-1:-1;;;;;9795:21:36;;9787:67;;;;-1:-1:-1;;;9787:67:36;;10542:2:79;9787:67:36;;;10524:21:79;10581:2;10561:18;;;10554:30;10620:34;10600:18;;;10593:62;-1:-1:-1;;;10671:18:79;;;10664:31;10712:19;;9787:67:36;10340:397:79;9787:67:36;-1:-1:-1;;;;;9950:18:36;;9925:22;9950:18;;;:9;:18;;;;;;9986:24;;;;9978:71;;;;-1:-1:-1;;;9978:71:36;;10944:2:79;9978:71:36;;;10926:21:79;10983:2;10963:18;;;10956:30;11022:34;11002:18;;;10995:62;-1:-1:-1;;;11073:18:79;;;11066:32;11115:19;;9978:71:36;10742:398:79;9978:71:36;-1:-1:-1;;;;;10083:18:36;;;;;;:9;:18;;;;;;;;10104:23;;;10083:44;;10220:12;:22;;;;;;;10268:37;1391:25:79;;;10083:18:36;;;10268:37;;1364:18:79;10268:37:36;1245:177:79;10316:48:36;9777:594;9712:659;;:::o;2666:187:21:-;2758:6;;;-1:-1:-1;;;;;2774:17:21;;;-1:-1:-1;;;;;;2774:17:21;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:29;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:29;;;;;;;:::i;:::-;1065:26:21::1;:24;:26::i;2118:147:36:-:0;5374:13:29;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:29;;;;;;;:::i;:::-;2220:38:36::1;2243:5;2250:7;2220:22;:38::i;1104:111:21:-:0;5374:13:29;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:29;;;;;;;:::i;:::-;1176:32:21::1;929:10:45::0;1176:18:21::1;:32::i;2271:159:36:-:0;5374:13:29;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:29;;;;;;;:::i;:::-;2383:13:36;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2406:17:36;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:597:79;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:79;574:15;-1:-1:-1;;570:29:79;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:79:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:79;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:79:o;1427:180::-;1486:6;1539:2;1527:9;1518:7;1514:23;1510:32;1507:52;;;1555:1;1552;1545:12;1507:52;-1:-1:-1;1578:23:79;;1427:180;-1:-1:-1;1427:180:79:o;1612:328::-;1689:6;1697;1705;1758:2;1746:9;1737:7;1733:23;1729:32;1726:52;;;1774:1;1771;1764:12;1726:52;1797:29;1816:9;1797:29;:::i;:::-;1787:39;;1845:38;1879:2;1868:9;1864:18;1845:38;:::i;:::-;1835:48;;1930:2;1919:9;1915:18;1902:32;1892:42;;1612:328;;;;;:::o;2134:186::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2285:29;2304:9;2285:29;:::i;:::-;2275:39;2134:186;-1:-1:-1;;;2134:186:79:o;2325:127::-;2386:10;2381:3;2377:20;2374:1;2367:31;2417:4;2414:1;2407:15;2441:4;2438:1;2431:15;2457:719;2500:5;2553:3;2546:4;2538:6;2534:17;2530:27;2520:55;;2571:1;2568;2561:12;2520:55;2607:6;2594:20;2633:18;2670:2;2666;2663:10;2660:36;;;2676:18;;:::i;:::-;2751:2;2745:9;2719:2;2805:13;;-1:-1:-1;;2801:22:79;;;2825:2;2797:31;2793:40;2781:53;;;2849:18;;;2869:22;;;2846:46;2843:72;;;2895:18;;:::i;:::-;2935:10;2931:2;2924:22;2970:2;2962:6;2955:18;3016:3;3009:4;3004:2;2996:6;2992:15;2988:26;2985:35;2982:55;;;3033:1;3030;3023:12;2982:55;3097:2;3090:4;3082:6;3078:17;3071:4;3063:6;3059:17;3046:54;3144:1;3137:4;3132:2;3124:6;3120:15;3116:26;3109:37;3164:6;3155:15;;;;;;2457:719;;;;:::o;3181:881::-;3306:6;3314;3322;3330;3338;3391:3;3379:9;3370:7;3366:23;3362:33;3359:53;;;3408:1;3405;3398:12;3359:53;3448:9;3435:23;3477:18;3518:2;3510:6;3507:14;3504:34;;;3534:1;3531;3524:12;3504:34;3557:50;3599:7;3590:6;3579:9;3575:22;3557:50;:::i;:::-;3547:60;;3660:2;3649:9;3645:18;3632:32;3616:48;;3689:2;3679:8;3676:16;3673:36;;;3705:1;3702;3695:12;3673:36;3728:52;3772:7;3761:8;3750:9;3746:24;3728:52;:::i;:::-;3718:62;;3833:2;3822:9;3818:18;3805:32;3789:48;;3862:2;3852:8;3849:16;3846:36;;;3878:1;3875;3868:12;3846:36;;3901:52;3945:7;3934:8;3923:9;3919:24;3901:52;:::i;:::-;3181:881;;;;-1:-1:-1;3891:62:79;;4000:2;3985:18;;3972:32;;-1:-1:-1;4051:3:79;4036:19;4023:33;;3181:881;-1:-1:-1;;;3181:881:79:o;4275:260::-;4343:6;4351;4404:2;4392:9;4383:7;4379:23;4375:32;4372:52;;;4420:1;4417;4410:12;4372:52;4443:29;4462:9;4443:29;:::i;:::-;4433:39;;4491:38;4525:2;4514:9;4510:18;4491:38;:::i;:::-;4481:48;;4275:260;;;;;:::o;4540:380::-;4619:1;4615:12;;;;4662;;;4683:61;;4737:4;4729:6;4725:17;4715:27;;4683:61;4790:2;4782:6;4779:14;4759:18;4756:38;4753:161;;;4836:10;4831:3;4827:20;4824:1;4817:31;4871:4;4868:1;4861:15;4899:4;4896:1;4889:15;4753:161;;4540:380;;;:::o;4925:127::-;4986:10;4981:3;4977:20;4974:1;4967:31;5017:4;5014:1;5007:15;5041:4;5038:1;5031:15;5057:128;5097:3;5128:1;5124:6;5121:1;5118:13;5115:39;;;5134:18;;:::i;:::-;-1:-1:-1;5170:9:79;;5057:128::o;5539:135::-;5578:3;-1:-1:-1;;5599:17:79;;5596:43;;;5619:18;;:::i;:::-;-1:-1:-1;5666:1:79;5655:13;;5539:135::o;6094:125::-;6134:4;6162:1;6159;6156:8;6153:34;;;6167:18;;:::i;:::-;-1:-1:-1;6204:9:79;;6094:125::o;11145:407::-;11347:2;11329:21;;;11386:2;11366:18;;;11359:30;11425:34;11420:2;11405:18;;11398:62;-1:-1:-1;;;11491:2:79;11476:18;;11469:41;11542:3;11527:19;;11145:407::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "claim()": "4e71d92d",
    "claimAmount()": "830953ab",
    "claimLimit()": "be610676",
    "claims(address)": "c6788bdd",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "iconURI()": "1f910971",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string,string,uint256,uint256)": "80ddd09f",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateClaimLimit(uint256)": "22370ae7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iconURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_iconURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimLimit\",\"type\":\"uint256\"}],\"name\":\"updateClaimLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GratieToken.sol\":\"GratieToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"src/GratieToken.sol\":{\"keccak256\":\"0x4cef2feadc8c1afd8dff1e71b3ada52e963b482dd1b1a70521088af450e27fc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3715956ad2127736fb568c86e5749f481549d602ba5c4eaf1d34ecf829f0686\",\"dweb:/ipfs/Qmc1HmFtxJ4gtZKaP1ERoCGYGuc8tWSjk7tQFEMHbKvBMa\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claims",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "iconURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_iconURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_supply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_claimAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_claimLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateClaimLimit"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor"
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/GratieToken.sol": "GratieToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "src/GratieToken.sol": {
        "keccak256": "0x4cef2feadc8c1afd8dff1e71b3ada52e963b482dd1b1a70521088af450e27fc4",
        "urls": [
          "bzz-raw://a3715956ad2127736fb568c86e5749f481549d602ba5c4eaf1d34ecf829f0686",
          "dweb:/ipfs/Qmc1HmFtxJ4gtZKaP1ERoCGYGuc8tWSjk7tQFEMHbKvBMa"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/GratieToken.sol",
    "id": 54958,
    "exportedSymbols": {
      "AddressUpgradeable": [
        48255
      ],
      "ContextUpgradeable": [
        48297
      ],
      "ERC20Upgradeable": [
        46533
      ],
      "GratieToken": [
        54957
      ],
      "IERC20MetadataUpgradeable": [
        46636
      ],
      "IERC20Upgradeable": [
        46611
      ],
      "Initializable": [
        44207
      ],
      "OwnableUpgradeable": [
        43899
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1567:72",
    "nodes": [
      {
        "id": 54819,
        "nodeType": "PragmaDirective",
        "src": "33:22:72",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 54820,
        "nodeType": "ImportDirective",
        "src": "59:87:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54958,
        "sourceUnit": 46534,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54821,
        "nodeType": "ImportDirective",
        "src": "148:84:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54958,
        "sourceUnit": 43900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54957,
        "nodeType": "ContractDefinition",
        "src": "238:1360:72",
        "nodes": [
          {
            "id": 54827,
            "nodeType": "VariableDeclaration",
            "src": "308:21:72",
            "nodes": [],
            "constant": false,
            "functionSelector": "1f910971",
            "mutability": "mutable",
            "name": "iconURI",
            "nameLocation": "322:7:72",
            "scope": 54957,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 54826,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "308:6:72",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 54829,
            "nodeType": "VariableDeclaration",
            "src": "336:26:72",
            "nodes": [],
            "constant": false,
            "functionSelector": "830953ab",
            "mutability": "mutable",
            "name": "claimAmount",
            "nameLocation": "351:11:72",
            "scope": 54957,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 54828,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "336:7:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 54831,
            "nodeType": "VariableDeclaration",
            "src": "369:25:72",
            "nodes": [],
            "constant": false,
            "functionSelector": "be610676",
            "mutability": "mutable",
            "name": "claimLimit",
            "nameLocation": "384:10:72",
            "scope": 54957,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 54830,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "369:7:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 54835,
            "nodeType": "VariableDeclaration",
            "src": "401:41:72",
            "nodes": [],
            "constant": false,
            "functionSelector": "c6788bdd",
            "mutability": "mutable",
            "name": "claims",
            "nameLocation": "436:6:72",
            "scope": 54957,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 54834,
              "keyType": {
                "id": 54832,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "409:7:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "401:27:72",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 54833,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "420:7:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 54843,
            "nodeType": "FunctionDefinition",
            "src": "505:55:72",
            "nodes": [],
            "body": {
              "id": 54842,
              "nodeType": "Block",
              "src": "519:41:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 54839,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44188,
                      "src": "530:20:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 54840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "530:22:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54841,
                  "nodeType": "ExpressionStatement",
                  "src": "530:22:72"
                }
              ]
            },
            "documentation": {
              "id": 54836,
              "nodeType": "StructuredDocumentation",
              "src": "451:48:72",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 54837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "516:2:72"
            },
            "returnParameters": {
              "id": 54838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "519:0:72"
            },
            "scope": 54957,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54891,
            "nodeType": "FunctionDefinition",
            "src": "572:437:72",
            "nodes": [],
            "body": {
              "id": 54890,
              "nodeType": "Block",
              "src": "772:237:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 54860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54858,
                      "name": "iconURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54827,
                      "src": "783:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54859,
                      "name": "_iconURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54849,
                      "src": "793:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "783:18:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 54861,
                  "nodeType": "ExpressionStatement",
                  "src": "783:18:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 54862,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43794,
                      "src": "812:14:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 54863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:16:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54864,
                  "nodeType": "ExpressionStatement",
                  "src": "812:16:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54866,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54845,
                        "src": "852:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 54867,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54847,
                        "src": "859:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 54865,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45968,
                      "src": "839:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 54868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "839:28:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54869,
                  "nodeType": "ExpressionStatement",
                  "src": "839:28:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54871,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "884:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "884:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 54873,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54851,
                          "src": "896:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 54874,
                          "name": "_claimAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54853,
                          "src": "906:12:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "896:22:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54870,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46345,
                      "src": "878:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:41:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54877,
                  "nodeType": "ExpressionStatement",
                  "src": "878:41:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54881,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "944:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GratieToken_$54957",
                              "typeString": "contract GratieToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GratieToken_$54957",
                              "typeString": "contract GratieToken"
                            }
                          ],
                          "id": 54880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "936:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 54879,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "936:7:72",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "936:13:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54883,
                        "name": "_claimAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54853,
                        "src": "951:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54878,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46345,
                      "src": "930:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "930:34:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54885,
                  "nodeType": "ExpressionStatement",
                  "src": "930:34:72"
                },
                {
                  "expression": {
                    "id": 54888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54886,
                      "name": "claimAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54829,
                      "src": "975:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54887,
                      "name": "_claimAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54853,
                      "src": "989:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "975:26:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54889,
                  "nodeType": "ExpressionStatement",
                  "src": "975:26:72"
                }
              ]
            },
            "functionSelector": "80ddd09f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 54856,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 54855,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44109,
                  "src": "760:11:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "760:11:72"
              }
            ],
            "name": "initialize",
            "nameLocation": "581:10:72",
            "parameters": {
              "id": 54854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54845,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "616:5:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 54891,
                  "src": "602:19:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54844,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54847,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "646:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 54891,
                  "src": "632:21:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54846,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54849,
                  "mutability": "mutable",
                  "name": "_iconURI",
                  "nameLocation": "678:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 54891,
                  "src": "664:22:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54848,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54851,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "705:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 54891,
                  "src": "697:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54853,
                  "mutability": "mutable",
                  "name": "_claimAmount",
                  "nameLocation": "731:12:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 54891,
                  "src": "723:20:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "591:159:72"
            },
            "returnParameters": {
              "id": 54857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:0:72"
            },
            "scope": 54957,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54906,
            "nodeType": "FunctionDefinition",
            "src": "1017:138:72",
            "nodes": [],
            "body": {
              "id": 54905,
              "nodeType": "Block",
              "src": "1111:44:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54901,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54893,
                        "src": "1128:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54902,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54895,
                        "src": "1139:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54900,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46345,
                      "src": "1122:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:25:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54904,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:25:72"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 54898,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 54897,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43813,
                  "src": "1101:9:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "1101:9:72"
              }
            ],
            "name": "mint",
            "nameLocation": "1026:4:72",
            "parameters": {
              "id": 54896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54893,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "1049:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 54906,
                  "src": "1041:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54895,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1077:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 54906,
                  "src": "1069:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:61:72"
            },
            "returnParameters": {
              "id": 54899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1111:0:72"
            },
            "scope": 54957,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54918,
            "nodeType": "FunctionDefinition",
            "src": "1163:85:72",
            "nodes": [],
            "body": {
              "id": 54917,
              "nodeType": "Block",
              "src": "1203:45:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54912,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1220:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1220:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54914,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54908,
                        "src": "1232:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54911,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46417,
                      "src": "1214:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:26:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54916,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:26:72"
                }
              ]
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1172:4:72",
            "parameters": {
              "id": 54909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54908,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1185:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 54918,
                  "src": "1177:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:17:72"
            },
            "returnParameters": {
              "id": 54910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1203:0:72"
            },
            "scope": 54957,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54944,
            "nodeType": "FunctionDefinition",
            "src": "1256:222:72",
            "nodes": [],
            "body": {
              "id": 54943,
              "nodeType": "Block",
              "src": "1282:196:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 54922,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54835,
                            "src": "1315:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 54925,
                          "indexExpression": {
                            "expression": {
                              "id": 54923,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1322:3:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 54924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1322:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1315:18:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 54926,
                          "name": "claimLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54831,
                          "src": "1337:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1315:32:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d204c696d6974207265616368656421",
                        "id": 54928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1362:22:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0edf15839e20f55be4c9623e46451294de785d9b3218de2efc0faa98306c3ea",
                          "typeString": "literal_string \"Claim Limit reached!\""
                        },
                        "value": "Claim Limit reached!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0edf15839e20f55be4c9623e46451294de785d9b3218de2efc0faa98306c3ea",
                          "typeString": "literal_string \"Claim Limit reached!\""
                        }
                      ],
                      "id": 54921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1293:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 54929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:102:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54930,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:102:72"
                },
                {
                  "expression": {
                    "id": 54935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "1406:20:72",
                    "subExpression": {
                      "baseExpression": {
                        "id": 54931,
                        "name": "claims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54835,
                        "src": "1408:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 54934,
                      "indexExpression": {
                        "expression": {
                          "id": 54932,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1415:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1415:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1408:18:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54936,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:20:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54938,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1446:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 54939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1446:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 54940,
                        "name": "claimAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54829,
                        "src": "1458:11:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54937,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46065,
                      "src": "1437:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 54941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:33:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54942,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:33:72"
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1265:5:72",
            "parameters": {
              "id": 54919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1270:2:72"
            },
            "returnParameters": {
              "id": 54920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1282:0:72"
            },
            "scope": 54957,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54956,
            "nodeType": "FunctionDefinition",
            "src": "1486:109:72",
            "nodes": [],
            "body": {
              "id": 54955,
              "nodeType": "Block",
              "src": "1552:43:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 54953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54951,
                      "name": "claimLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54831,
                      "src": "1563:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54952,
                      "name": "_claimLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54946,
                      "src": "1576:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1563:24:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54954,
                  "nodeType": "ExpressionStatement",
                  "src": "1563:24:72"
                }
              ]
            },
            "functionSelector": "22370ae7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 54949,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 54948,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43813,
                  "src": "1542:9:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "1542:9:72"
              }
            ],
            "name": "updateClaimLimit",
            "nameLocation": "1495:16:72",
            "parameters": {
              "id": 54947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54946,
                  "mutability": "mutable",
                  "name": "_claimLimit",
                  "nameLocation": "1520:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 54956,
                  "src": "1512:19:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1511:21:72"
            },
            "returnParameters": {
              "id": 54950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1552:0:72"
            },
            "scope": 54957,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54822,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46533,
              "src": "262:16:72"
            },
            "id": 54823,
            "nodeType": "InheritanceSpecifier",
            "src": "262:16:72"
          },
          {
            "baseName": {
              "id": 54824,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43899,
              "src": "280:18:72"
            },
            "id": 54825,
            "nodeType": "InheritanceSpecifier",
            "src": "280:18:72"
          }
        ],
        "canonicalName": "GratieToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54957,
          43899,
          46533,
          46636,
          46611,
          48297,
          44207
        ],
        "name": "GratieToken",
        "nameLocation": "247:11:72",
        "scope": 54958,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 72
}